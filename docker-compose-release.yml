services:
  kafka:
    image: bitnami/kafka:3.7.0
    hostname: kafka
    ports:
      - "9092:9092"
    volumes:
      - kafka:/bitnami
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9094,CONTROLLER://:9093,EXTERNAL://:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9094,EXTERNAL://${DOCKER_HOST_IP}:9092"
      KAFKA_BROKER_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CFG_LOG_RETENTION_HOURS: 2
    logging:
      options:
        max-size: "10m"
        max-file: "5"

  kafka_init:
    image: bitnami/kafka:latest
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - ./scripts/kafka/kafka_init.sh:/kafka_init.sh
    entrypoint: ["/bin/sh", "kafka_init.sh"]

  ode:
    image: usdotjpoode/jpo-ode:jpo-ode-2.1.0
    ports:
      - "8080:8080"
      - "9090:9090"
      - "46753:46753/udp"
      - "46800:46800/udp"
      - "47900:47900/udp"
      - "44900:44900/udp"
      - "44910:44910/udp"
      - "44920:44920/udp"
      - "44930:44930/udp"
      - "44940:44940/udp"
      - "5555:5555/udp"
      - "6666:6666/udp"
    environment:
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      ZK: ${DOCKER_HOST_IP}:2181
      ODE_SECURITY_SVCS_SIGNATURE_URI: ${ODE_SECURITY_SVCS_SIGNATURE_URI}
      ODE_RSU_USERNAME: ${ODE_RSU_USERNAME}
      ODE_RSU_PASSWORD: ${ODE_RSU_PASSWORD}
      # Commented out, will use SDW depositor module by default
      #ODE_DEPOSIT_SDW_MESSAGES_OVER_WEBSOCKET: ${ODE_DEPOSIT_SDW_MESSAGES_OVER_WEBSOCKET}
      #ODE_DDS_CAS_USERNAME: ${ODE_DDS_CAS_USERNAME}
      #ODE_DDS_CAS_PASSWORD: ${ODE_DDS_CAS_PASSWORD}
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - ${DOCKER_SHARED_VOLUME}:/jpo-ode
      - ${DOCKER_SHARED_VOLUME}/uploads:/home/uploads
    logging:
      options:
        max-size: "10m"
        max-file: "5"

  adm:
    image: usdotjpoode/asn1_codec:asn1_codec-2.1.0
    environment:
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      ACM_CONFIG_FILE: adm.properties
      ACM_LOG_TO_CONSOLE: ${ADM_LOG_TO_CONSOLE}
      ACM_LOG_TO_FILE: ${ADM_LOG_TO_FILE}
      ACM_LOG_LEVEL: ${ADM_LOG_LEVEL}
    depends_on:
      kafka:
        condition: service_started
      ode:
        condition: service_started
    volumes:
      - ${DOCKER_SHARED_VOLUME}:/asn1_codec_share
    logging:
      options:
        max-size: "10m"
        max-file: "5"

  aem:
    image: usdotjpoode/asn1_codec:asn1_codec-2.1.0
    environment:
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      ACM_CONFIG_FILE: aem.properties
      ACM_LOG_TO_CONSOLE: ${AEM_LOG_TO_CONSOLE}
      ACM_LOG_TO_FILE: ${AEM_LOG_TO_FILE}
      ACM_LOG_LEVEL: ${AEM_LOG_LEVEL}
    depends_on:
      kafka:
        condition: service_started
      ode:
        condition: service_started
    volumes:
      - ${DOCKER_SHARED_VOLUME}:/asn1_codec_share
    logging:
      options:
        max-size: "10m"
        max-file: "5"

#  ppm_bsm:
#    build:
#      context: ./jpo-cvdp
#      dockerfile: Dockerfile
#    image: jpoode_ppm:latest
#    environment:
#      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
#      PPM_CONFIG_FILE: ppmBsm.properties
#      PPM_LOG_TO_CONSOLE: ${PPM_BSM_LOG_TO_CONSOLE}
#      PPM_LOG_TO_FILE: ${PPM_BSM_LOG_TO_FILE}
#      PPM_LOG_LEVEL: ${PPM_BSM_LOG_LEVEL}
#    volumes:
#      - ${DOCKER_SHARED_VOLUME}:/ppm_data
#    depends_on:
#      - kafka
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "5"

#  ppm_tim:
#    build:
#      context: ./jpo-cvdp
#      dockerfile: Dockerfile
#    image: jpoode_ppm:latest
#    environment:
#      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
#      PPM_CONFIG_FILE: ppmTim.properties
#      PPM_LOG_TO_CONSOLE: ${PPM_TIM_LOG_TO_CONSOLE}
#      PPM_LOG_TO_FILE: ${PPM_TIM_LOG_TO_FILE}
#      PPM_LOG_LEVEL: ${PPM_TIM_LOG_LEVEL}
#    volumes:
#      - ${DOCKER_SHARED_VOLUME}:/ppm_data
#    depends_on:
#      - kafka
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "5"

#  cvpep_bsm_depositor:
#    build: ./jpo-s3-deposit
#    image: jpoode_s3dep:latest
#    environment:
#      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
#      DEPOSIT_BUCKET_NAME: ${CVPEP_BSM_BUCKET_NAME}
#      DEPOSIT_KEY_NAME: ${CVPEP_BSM_DEPOSIT_KEY}
#      DEPOSIT_TOPIC: ${CVPEP_BSM_TOPIC}
#      K_AWS_ACCESS_KEY_ID: ${CVPEP_BSM_K_AWS_ACCESS_KEY_ID}
#      K_AWS_SECRET_ACCESS_SECRET: ${CVPEP_BSM_K_AWS_SECRET_ACCESS_SECRET}
#      K_AWS_SESSION_TOKEN: ${CVPEP_BSM_K_AWS_SESSION_TOKEN}
#      K_AWS_EXPIRATION: ${CVPEP_BSM_K_AWS_EXPIRATION}
#      API_ENDPOINT: ${CVPEP_BSM_API_ENDPOINT}
#      HEADER_ACCEPT: ${CVPEP_BSM_HEADER_ACCEPT}
#      HEADER_X_API_KEY: ${CVPEP_BSM_HEADER_X_API_KEY}
#      DEPOSIT_GROUP: ${CVPEP_BSM_GROUP}
#    depends_on:
#     - kafka
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "5"

#  rde_bsm_depositor:
#    build: ./jpo-s3-deposit
#    image: jpoode_s3dep:latest
#    environment:
#      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
#      DEPOSIT_BUCKET_NAME: ${RDE_BSM_BUCKET_NAME}
#      DEPOSIT_KEY_NAME: ${RDE_BSM_DEPOSIT_KEY}
#      DEPOSIT_TOPIC: ${RDE_BSM_TOPIC}
#      K_AWS_ACCESS_KEY_ID: ${RDE_BSM_K_AWS_ACCESS_KEY_ID}
#      K_AWS_SECRET_ACCESS_SECRET: ${RDE_BSM_K_AWS_SECRET_ACCESS_SECRET}
#      K_AWS_SESSION_TOKEN: ${RDE_BSM_K_AWS_SESSION_TOKEN}
#      K_AWS_EXPIRATION: ${RDE_BSM_K_AWS_EXPIRATION}
#      API_ENDPOINT: ${RDE_BSM_API_ENDPOINT}
#      HEADER_ACCEPT: ${RDE_BSM_HEADER_ACCEPT}
#      HEADER_X_API_KEY: ${RDE_BSM_HEADER_X_API_KEY}
#      DEPOSIT_GROUP: ${RDE_BSM_GROUP}
#    depends_on:
#     - kafka
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "5"

#  cvpep_tim_depositor:
#    build: ./jpo-s3-deposit
#    image: jpoode_s3dep:latest
#    environment:
#      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
#      DEPOSIT_BUCKET_NAME: ${CVPEP_TIM_BUCKET_NAME}
#      DEPOSIT_KEY_NAME: ${CVPEP_TIM_DEPOSIT_KEY}
#      DEPOSIT_TOPIC: ${CVPEP_TIM_TOPIC}
#      K_AWS_ACCESS_KEY_ID: ${CVPEP_BSM_K_AWS_ACCESS_KEY_ID}
#      K_AWS_SECRET_ACCESS_SECRET: ${CVPEP_BSM_K_AWS_SECRET_ACCESS_SECRET}
#      K_AWS_SESSION_TOKEN: ${CVPEP_BSM_K_AWS_SESSION_TOKEN}
#      K_AWS_EXPIRATION: ${CVPEP_BSM_K_AWS_EXPIRATION}
#      API_ENDPOINT: ${CVPEP_BSM_API_ENDPOINT}
#      HEADER_ACCEPT: ${CVPEP_BSM_HEADER_ACCEPT}
#      HEADER_X_API_KEY: ${CVPEP_BSM_HEADER_X_API_KEY}
#      DEPOSIT_GROUP: ${CVPEP_TIM_GROUP}
#    depends_on:
#     - kafka
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "5"

#  rde_tim_depositor:
#    build: ./jpo-s3-deposit
#    image: jpoode_s3dep:latest
#    environment:
#      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
#      DEPOSIT_BUCKET_NAME: ${RDE_TIM_BUCKET_NAME}
#      DEPOSIT_KEY_NAME: ${RDE_TIM_DEPOSIT_KEY}
#      DEPOSIT_TOPIC: ${RDE_TIM_TOPIC}
#      K_AWS_ACCESS_KEY_ID: ${CVPEP_BSM_K_AWS_ACCESS_KEY_ID}
#      K_AWS_SECRET_ACCESS_SECRET: ${RDE_TIM_K_AWS_SECRET_ACCESS_SECRET}
#      K_AWS_SESSION_TOKEN: ${RDE_TIM_K_AWS_SESSION_TOKEN}
#      K_AWS_EXPIRATION: ${RDE_TIM_K_AWS_EXPIRATION}
#      API_ENDPOINT: ${RDE_TIM_API_ENDPOINT}
#      HEADER_ACCEPT: ${RDE_TIM_HEADER_ACCEPT}
#      HEADER_X_API_KEY: ${RDE_TIM_HEADER_X_API_KEY}
#      DEPOSIT_GROUP: ${RDE_TIM_GROUP}
#    depends_on:
#     - kafka
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "5"

#  sdw_depositor:
#    build: ./jpo-sdw-depositor
#    image: jpoode_sdwdep:latest
#    environment:
#      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
#      #SDW_GROUP_ID: ${SDW_GROUP_ID}
#      #SDW_KAFKA_PORT: ${SDW_KAFKA_PORT}
#      #SDW_SUBSCRIPTION_TOPICS: ${SDW_SUBSCRIPTION_TOPICS}
#      #SDW_DESTINATION_URL: ${SDW_DESTINATION_URL}
#      SDW_API_KEY: ${SDW_API_KEY}
#    depends_on:
#     - kafka
#     - zookeeper
#     - ode
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "5"

  sec:
    image: usdotjpoode/jpo-security-svcs:release_1.4.0
    ports:
     - "8090:8090"
    environment:
      SEC_CRYPTO_SERVICE_BASE_URI: ${SEC_CRYPTO_SERVICE_BASE_URI}
    logging:
      options:
        max-size: "10m"  
        max-file: "5"

volumes:
  kafka:
    {}